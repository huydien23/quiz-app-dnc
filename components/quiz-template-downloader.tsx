"use client"

import React from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Download, FileText, FileSpreadsheet, File } from "lucide-react"

export function QuizTemplateDownloader() {
  const downloadJsonTemplate = () => {
    const template = {
      title: "Ti√™u ƒë·ªÅ b√†i thi",
      description: "M√¥ t·∫£ b√†i thi",
      timeLimit: 30,
      questions: [
        {
          question: "C√¢u h·ªèi m·∫´u?",
          options: ["L·ª±a ch·ªçn A", "L·ª±a ch·ªçn B", "L·ª±a ch·ªçn C", "L·ª±a ch·ªçn D"],
          correctAnswer: 0,
          explanation: "Gi·∫£i th√≠ch ƒë√°p √°n"
        }
      ]
    }

    const blob = new Blob([JSON.stringify(template, null, 2)], { type: 'application/json' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = 'quiz-template.json'
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const downloadExcelTemplate = () => {
    // Create Excel template data
    const csvContent = [
      ['C√¢u h·ªèi', 'L·ª±a ch·ªçn A', 'L·ª±a ch·ªçn B', 'L·ª±a ch·ªçn C', 'L·ª±a ch·ªçn D', 'ƒê√°p √°n', 'Gi·∫£i th√≠ch'],
      ['2 + 2 = ?', '3', '4', '5', '6', 'B', '2 + 2 = 4'],
      ['Th·ªß ƒë√¥ Vi·ªát Nam?', 'H√† N·ªôi', 'TP.HCM', 'ƒê√† N·∫µng', 'Hu·∫ø', 'A', 'H√† N·ªôi l√† th·ªß ƒë√¥'],
      ['10 - 7 = ?', '2', '3', '4', '5', 'B', '10 - 7 = 3']
    ].map(row => row.map(cell => `"${cell}"`).join(',')).join('\n')

    const blob = new Blob(['\uFEFF' + csvContent], { type: 'text/csv;charset=utf-8' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = 'quiz-template.csv'
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const downloadWordTemplate = () => {
    const wordContent = `
TEMPLATE T·∫†O QUIZ

Question: C√¢u h·ªèi m·∫´u 1?
A) L·ª±a ch·ªçn A
B) L·ª±a ch·ªçn B
C) L·ª±a ch·ªçn C
D) L·ª±a ch·ªçn D
Answer: A
Explanation: Gi·∫£i th√≠ch ƒë√°p √°n

Question: C√¢u h·ªèi m·∫´u 2?
A) L·ª±a ch·ªçn A
B) L·ª±a ch·ªçn B
C) L·ª±a ch·ªçn C
D) L·ª±a ch·ªçn D
Answer: B
Explanation: Gi·∫£i th√≠ch ƒë√°p √°n

H∆Ø·ªöNG D·∫™N:
- M·ªói c√¢u h·ªèi b·∫Øt ƒë·∫ßu b·∫±ng "Question:"
- C√°c l·ª±a ch·ªçn ƒë∆∞·ª£c ƒë√°nh d·∫•u A), B), C), D)
- ƒê√°p √°n ƒë∆∞·ª£c ch·ªâ ƒë·ªãnh b·∫±ng "Answer:" theo sau l√† ch·ªØ c√°i A, B, C, ho·∫∑c D
- Gi·∫£i th√≠ch ƒë∆∞·ª£c th√™m v√†o v·ªõi "Explanation:"
- ƒê·ªÉ tr·ªëng m·ªôt d√≤ng gi·ªØa c√°c c√¢u h·ªèi
    `.trim()

    const blob = new Blob([wordContent], { type: 'text/plain;charset=utf-8' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = 'quiz-template.txt'
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  return (
    <Card className="w-full">
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Download className="h-5 w-5" />
          T·∫£i Template
        </CardTitle>
        <CardDescription>
          T·∫£i c√°c file m·∫´u ƒë·ªÉ t·∫°o quiz theo ƒë·ªãnh d·∫°ng chu·∫©n
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div className="flex flex-col items-center space-y-2 p-4 border rounded-lg">
            <File className="h-8 w-8 text-blue-500" />
            <Badge variant="outline">JSON</Badge>
            <p className="text-xs text-muted-foreground text-center">
              ƒê·ªãnh d·∫°ng JSON chu·∫©n v·ªõi ƒë·∫ßy ƒë·ªß metadata
            </p>
            <Button onClick={downloadJsonTemplate} size="sm" className="w-full">
              <Download className="h-4 w-4 mr-2" />
              T·∫£i JSON
            </Button>
          </div>

          <div className="flex flex-col items-center space-y-2 p-4 border rounded-lg">
            <FileSpreadsheet className="h-8 w-8 text-green-500" />
            <Badge variant="outline">CSV</Badge>
            <p className="text-xs text-muted-foreground text-center">
              B·∫£ng t√≠nh d·ªÖ ch·ªânh s·ª≠a v·ªõi Excel
            </p>
            <Button onClick={downloadExcelTemplate} size="sm" className="w-full">
              <Download className="h-4 w-4 mr-2" />
              T·∫£i CSV
            </Button>
          </div>

          <div className="flex flex-col items-center space-y-2 p-4 border rounded-lg">
            <FileText className="h-8 w-8 text-orange-500" />
            <Badge variant="outline">TXT</Badge>
            <p className="text-xs text-muted-foreground text-center">
              Template vƒÉn b·∫£n cho Word/PDF
            </p>
            <Button onClick={downloadWordTemplate} size="sm" className="w-full">
              <Download className="h-4 w-4 mr-2" />
              T·∫£i TXT
            </Button>
          </div>
        </div>

        <div className="bg-blue-50 dark:bg-blue-950 p-4 rounded-lg">
          <h4 className="text-sm font-medium mb-2 text-blue-900 dark:text-blue-100">üí° G·ª£i √Ω</h4>
          <ul className="text-xs text-blue-800 dark:text-blue-200 space-y-1">
            <li>‚Ä¢ S·ª≠ d·ª•ng JSON cho vi·ªác import/export ho√†n ch·ªânh</li>
            <li>‚Ä¢ S·ª≠ d·ª•ng CSV/Excel ƒë·ªÉ t·∫°o nhi·ªÅu c√¢u h·ªèi nhanh ch√≥ng</li>
            <li>‚Ä¢ S·ª≠ d·ª•ng TXT template cho Word/PDF khi c√≥ s·∫µn n·ªôi dung</li>
            <li>‚Ä¢ Lu√¥n ki·ªÉm tra preview tr∆∞·ªõc khi l∆∞u b√†i thi</li>
          </ul>
        </div>
      </CardContent>
    </Card>
  )
}